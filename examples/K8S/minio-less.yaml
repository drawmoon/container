apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio-pv
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  storageClassName: ""
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
    path: /tmp/minio
  # nfs:
  #   server: 192.168.1.10
  #   path: "/data/nfs/minio"
  # cephfs:
  #   readOnly: false
  #   monitors:
  #     - 192.168..1.10:6789
  #   user: admin

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: ""
  volumeName: minio-pv
  volumeMode: Filesystem
status: {}

---
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app: minio
spec:
  type: NodePort
  ports:
    - protocol: TCP
      name: tcp
      port: 9000
      targetPort: 9000
  selector:
    app: minio

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      name: minio-pod
      labels:
        app: minio
    spec:
      containers:
        - name: minio-container
          image: minio/minio
          imagePullPolicy: Always
          env:
            - name: MINIO_ACCESS_KEY
              value: AKIAIOSFODNN7EXAMPLE
            - name: MINIO_SECRET_KEY
              value: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          command: ["/usr/bin/minio", "server", "/data"]
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: minio-data
              mountPath: /data
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-claim
